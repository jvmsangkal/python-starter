[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "py-starter"
dynamic = ["version"]
description = 'Starter for Python Projects'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [{ name = "John Viscel M. Sangkal", email = "jvmsangkal@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  # package dependencies
]

[project.optional-dependencies]
dev = ["ruff", "pre-commit", "pyright"]

[project.urls]
Documentation = "https://github.com/unknown/py-starter#readme"
Issues = "https://github.com/unknown/py-starter/issues"
Source = "https://github.com/unknown/py-starter"

[tool.hatch.version]
path = "src/py_starter/__about__.py"

[tool.hatch.envs.default]
dependencies = ["coverage[toml]>=6.5", "pytest"]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/py_starter tests}"

[tool.coverage.run]
source_pkgs = ["py_starter", "tests"]
branch = true
parallel = true
omit = ["src/py_starter/__about__.py"]

[tool.coverage.paths]
py_starter = ["src/py_starter", "*/py-starter/src/py_starter"]
tests = ["tests", "*/py-starter/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # pyupgrade
]
ignore = [
  'E203', # Whitespace before ':' (https://black.readthedocs.io/en/stable/the_black_code_style.html#slices)
  'E501', # Line too long (https://black.readthedocs.io/en/stable/the_black_code_style.html#line-length))
  'E402', # module level import not at top of file
  'C901', # too complex
]

[tool.ruff.format]
quote-style = "single"
